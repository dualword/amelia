CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(Amelia)

SET(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE.BSD")
SET(CPACK_PACKAGE_CONTACT "AMELIA Development Team")
SET(CPACK_PACKAGE_NAME "AMELIA")
SET(CPACK_PACKAGE_VERSION "0.0.2")
SET(CPACK_PACKAGE_VERSION_MAJOR "0")
SET(CPACK_PACKAGE_VERSION_MINOR "0")
SET(CPACK_PACKAGE_VERSION_PATCH "2")
SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libqt4-webkit (>= 4.4), libqt4-core (>=4.4), libqt4-gui (>=4.4)")
INCLUDE(CPack)

SET(CMAKE_INCLUDE_CURRENT_DIR true)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/plugins)
SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")
 
FIND_PACKAGE (Qt4 REQUIRED)

IF(${QT_VERSION_MINOR} LESS 4)
  MESSAGE(FATAL_ERROR "Need Qt 4.4.0 at least")
ENDIF(${QT_VERSION_MINOR} LESS 4)

INCLUDE_DIRECTORIES(${QT_INCLUDE_DIR} src/)
INCLUDE(${QT_USE_FILE})


SET(amelia_SRCS
  src/main.cpp
  )

SET(amelia_H
  )

INCLUDE("cmake/Macros.cmake")

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h)
INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR})

FIND_PACKAGE (Irrlicht REQUIRED)
INCLUDE_DIRECTORIES(${Irrlicht_INCLUDE_DIR})
LINK_DIRECTORIES(${Irrlicht_LIBRARY_DIR})

ADD_SUBDIRECTORY(src)

QT4_WRAP_CPP(amelia_SRCS ${amelia_H})
ADD_EXECUTABLE(AmeliaApp ${amelia_SRCS})
INCLUDE_DIRECTORIES(src/libamelia)
TARGET_LINK_LIBRARIES(AmeliaApp
  ${QT_LIBRARIES} 
  amelia
  )

INSTALL(TARGETS AmeliaApp
  RUNTIME DESTINATION bin )


